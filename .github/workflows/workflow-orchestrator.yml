name: ワークフロー実行オーケストレーター

# 開発ワークフローの実行を制御するメインオーケストレーター
# PR時に確実に必要なテストを実行するためのワークフロー
on:
  pull_request:
    branches: [develop, main]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - 'rules/**'
  workflow_dispatch: # 手動実行も可能

# 実行の最適化（同時実行を防止）
concurrency:
  group: orchestrator-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# workflow_dispatch APIにアクセスするための権限設定
permissions:
  contents: read
  pull-requests: write
  actions: write

jobs:
  # ワークフローの実行を制御
  trigger-workflows:
    name: テストワークフローの実行
    runs-on: ubuntu-latest
    steps:
      - name: リポジトリのチェックアウト
        uses: actions/checkout@v4

      - name: ユニットテストワークフローの実行
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'unit-tests.yml',
              ref: '${{ github.head_ref || github.ref_name }}'
            });
            console.log('ユニットテストワークフローを実行しました');

      - name: 統合テストワークフローの実行
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'integration-tests.yml',
              ref: '${{ github.head_ref || github.ref_name }}'
            });
            console.log('統合テストワークフローを実行しました');

      # PRに特定のラベルがある場合のみE2Eテスト実行
      - name: E2Eテストワークフローの実行要否確認
        id: check-e2e
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            const labels = pr.data.labels.map(label => label.name);
            return labels.includes('needs-e2e-tests') ? 'true' : 'false';

      - name: E2Eテストワークフローの実行
        if: steps.check-e2e.outputs.result == 'true' || github.event_name == 'workflow_dispatch'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'e2e-tests.yml',
              ref: '${{ github.head_ref || github.ref_name }}'
            });
            console.log('E2Eテストワークフローを実行しました');

      - name: テスト実行状況の通知
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const checkE2eResult = '${{ steps.check-e2e.outputs.result }}';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## テストワークフロー実行開始 🚀

              以下のテストが実行されます:

              - ✅ ユニットテスト（自動実行）
              - ✅ 統合テスト（自動実行）
              ${checkE2eResult == 'true' ? '- ✅ E2Eテスト（自動実行）' : '- ⏸️ E2Eテスト（"needs-e2e-tests"ラベルを追加すると実行されます）'}

              各テスト結果は個別のワークフローコメントで報告されます。`
            });
