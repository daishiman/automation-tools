{
  "name": "automationa-tools-application",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "type": "module",
  "scripts": {
    "dev": "pnpm exec wrangler pages dev out --port 3000 --inspector-port=9229",
    "dev:with-env": "WRANGLER_ENV=local node -r dotenv/config scripts/start-dev.js",
    "dev:preview": "echo \"Error: 現在Pagesはローカル開発で--envをサポートしていません\" && exit 1",
    "dev:prod": "echo \"Error: 現在Pagesはローカル開発で--envをサポートしていません\" && exit 1",
    "build": "next build",
    "smart-add": "node scripts/smart-add.js",
    "git-hooks:install": "node scripts/install-git-hooks.js",
    "start": "next start",
    "test": "vitest",
    "test:run": "vitest run",
    "test:ci": "vitest run --reporter=default --testTimeout=600000 || exit 0",
    "test:fast": "vitest run --exclude=tests/performance/**",
    "test:perf": "vitest run tests/performance/**",
    "test:coverage": "vitest run --coverage",
    "test:changed": "vitest related --run $(git diff --name-only --staged | grep -E '\\.tsx?$|\\.jsx?$')",
    "test:components": "vitest run --config vitest.components.config.ts",
    "test:db:integration": "pnpm exec wrangler d1 execute automationa-tools-test --local --file=./tests/setup.sql && vitest run tests/integration/database",
    "lint": "eslint . --ext .js,.jsx,.ts,.tsx",
    "lint:fix": "eslint . --ext .js,.jsx,.ts,.tsx --fix",
    "lint:src": "eslint ./src --ext .js,.jsx,.ts,.tsx",
    "lint:src:fix": "eslint ./src --ext .js,.jsx,.ts,.tsx --fix",
    "lint:ci": "eslint . --ext .js,.jsx,.ts,.tsx --max-warnings=0 || exit 0",
    "format": "prettier --write \"**/*.{ts,tsx,md,mdx,css,json}\"",
    "format:check": "prettier --check \"**/*.{ts,tsx,md,mdx,css,json}\"",
    "type-check": "tsc --pretty --noEmit",
    "typecheck": "tsc --pretty --noEmit",
    "db:generate": "drizzle-kit generate",
    "db:migrate": "node -r dotenv/config scripts/migrate.js",
    "db:studio": "drizzle-kit studio",
    "db:backup": "node -r dotenv/config scripts/backup.js",
    "cf:local": "node -r dotenv/config scripts/wrangler-helper.js --mode=dev --env=local",
    "cf:preview": "node -r dotenv/config scripts/wrangler-helper.js --mode=dev --env=preview",
    "cf:prod": "node -r dotenv/config scripts/wrangler-helper.js --mode=dev --env=production",
    "cf:deploy:preview": "next build && pnpm exec wrangler pages deploy ./out --project-name=automationa-tools --branch=develop",
    "cf:deploy:prod": "next build && pnpm exec wrangler pages deploy ./out --project-name=automationa-tools --branch=main",
    "cf:tail:preview": "node -r dotenv/config scripts/wrangler-helper.js --mode=tail --env=preview",
    "cf:tail:prod": "node -r dotenv/config scripts/wrangler-helper.js --mode=tail --env=production",
    "cf:db:local": "node -r dotenv/config scripts/wrangler-helper.js --mode=db --env=local",
    "cf:db:preview": "node -r dotenv/config scripts/wrangler-helper.js --mode=db --env=preview",
    "cf:db:prod": "node -r dotenv/config scripts/wrangler-helper.js --mode=db --env=production",
    "cf:db:local:execute": "pnpm exec wrangler d1 execute automationa-tools-local-db --local --command",
    "cf:db:preview:execute": "pnpm exec wrangler d1 execute automationa-tools-dev-db --env=preview --command",
    "cf:db:prod:execute": "pnpm exec wrangler d1 execute automationa-tools-prod-db --env=production --command",
    "cf:db:local:migrations:apply": "pnpm exec wrangler d1 migrations apply automationa-tools-local-db --local",
    "cf:db:preview:migrations:apply": "pnpm exec wrangler d1 migrations apply automationa-tools-dev-db --env=preview",
    "cf:db:prod:migrations:apply": "pnpm exec wrangler d1 migrations apply automationa-tools-prod-db --env=production",
    "cf:db:local:migrations:list": "pnpm exec wrangler d1 migrations list automationa-tools-local-db --local",
    "db:create-d1": "pnpm exec wrangler d1 create automationa-tools-db",
    "kv:create-namespace": "pnpm exec wrangler kv:namespace create",
    "kv:dev:put": "pnpm exec wrangler kv key put --binding=CACHE_DEV --env=preview",
    "kv:dev:get": "pnpm exec wrangler kv key get --binding=CACHE_DEV --env=preview --remote",
    "kv:dev:list": "pnpm exec wrangler kv key list --binding=CACHE_DEV --env=preview --remote",
    "kv:session:dev:put": "pnpm exec wrangler kv key put --binding=SESSION_STORE_DEV --env=preview",
    "kv:session:dev:get": "pnpm exec wrangler kv key get --binding=SESSION_STORE_DEV --env=preview --remote",
    "kv:prod:put": "pnpm exec wrangler kv key put --binding=CACHE_PROD --env=production",
    "kv:prod:get": "pnpm exec wrangler kv key get --binding=CACHE_PROD --env=production --remote",
    "kv:prod:list": "pnpm exec wrangler kv key list --binding=CACHE_PROD --env=production --remote",
    "kv:session:prod:put": "pnpm exec wrangler kv key put --binding=SESSION_STORE_PROD --env=production",
    "kv:session:prod:get": "pnpm exec wrangler kv key get --binding=SESSION_STORE_PROD --env=production --remote",
    "r2:create-bucket": "pnpm exec wrangler r2 bucket create",
    "r2:list-buckets": "pnpm exec wrangler r2 bucket list --remote",
    "r2:dev:put": "pnpm exec wrangler r2 object put dev-automationa-tools-storage/ --file= --remote",
    "r2:dev:get": "pnpm exec wrangler r2 object get dev-automationa-tools-storage/ --remote",
    "r2:prod:put": "pnpm exec wrangler r2 object put prod-automationa-tools-storage/ --file= --remote",
    "r2:prod:get": "pnpm exec wrangler r2 object get prod-automationa-tools-storage/ --remote",
    "db:dev:execute": "pnpm exec wrangler d1 execute automationa-tools-dev-db --env=preview --command",
    "db:dev:migrate": "pnpm exec wrangler d1 migrations apply automationa-tools-dev-db --env=preview",
    "db:dev:migrate:remote": "pnpm exec wrangler d1 migrations apply automationa-tools-dev-db --env=preview --remote",
    "db:dev:shell": "pnpm exec wrangler d1 shell automationa-tools-dev-db --env=preview",
    "db:prod:execute": "pnpm exec wrangler d1 execute automationa-tools-prod-db --env=production --command",
    "db:prod:migrate": "pnpm exec wrangler d1 migrations apply automationa-tools-prod-db --env=production",
    "db:prod:migrate:remote": "pnpm exec wrangler d1 migrations apply automationa-tools-prod-db --env=production --remote",
    "db:prod:shell": "pnpm exec wrangler d1 shell automationa-tools-prod-db --env=production",
    "cf:dashboard": "open https://dash.cloudflare.com",
    "cf:r2:dashboard": "open https://dash.cloudflare.com/?to=/:account/r2/overview",
    "cf:kv:dashboard": "open https://dash.cloudflare.com/?to=/:account/workers/kv/namespaces",
    "cf:d1:dashboard": "open https://dash.cloudflare.com/?to=/:account/d1",
    "wrangler": "wrangler",
    "create-pr": "tsx src/scripts/create-pr.ts",
    "create-commit-msg": "tsx src/scripts/create-commit-msg.ts",
    "cf:llm": "node scripts/wrangler-helper.js llm-config",
    "cf:deploy:dev": "pnpm cf:deploy:preview",
    "cf:tail:dev": "pnpm cf:tail:preview",
    "cf:db:dev": "pnpm cf:db:preview",
    "prettier": "prettier --write .",
    "prepare": "[ \"$CI\" = true ] || [ \"$GITHUB_ACTIONS\" = true ] || husky",
    "gh:actions:fetch": "node scripts/github-actions-results.js",
    "gh:actions:fetch:all": "node scripts/github-actions-results.js all",
    "gh:actions:fetch:with-logs": "DOWNLOAD_LOGS=true node scripts/github-actions-results.js all",
    "gh:actions:fetch:failed": "node scripts/github-actions-results.js 158216561",
    "gh:actions:fetch:failed:with-logs": "DOWNLOAD_LOGS=true node scripts/github-actions-results.js 158216561",
    "gh:actions:fetch:test": "node scripts/github-actions-results.js --test-mode",
    "gh:actions:report": "node scripts/github-actions-report.js",
    "gh:actions:full": "pnpm gh:actions:fetch:all && pnpm gh:actions:report all-workflow-results.json",
    "gh:actions:full:env": "GITHUB_TOKEN=$GITHUB_TOKEN GITHUB_OWNER=$GITHUB_OWNER GITHUB_REPO=$GITHUB_REPO pnpm gh:actions:fetch:all && pnpm gh:actions:report all-workflow-results.json",
    "gh:actions:full:with-logs": "DOWNLOAD_LOGS=true pnpm gh:actions:fetch:all && pnpm gh:actions:report all-workflow-results.json",
    "gh:actions:failed-report": "pnpm gh:actions:fetch:failed:with-logs && pnpm gh:actions:report workflow-158216561-results.json",
    "gh:actions:test:full": "pnpm gh:actions:fetch:test && pnpm gh:actions:report test-workflow-results.json",
    "db:sync-migrations": "cp -r ./drizzle/*.sql ./migrations/",
    "db:full-migrate:dev": "pnpm db:generate && pnpm db:sync-migrations && pnpm db:dev:migrate",
    "db:full-migrate:prod": "pnpm db:generate && pnpm db:sync-migrations && pnpm db:prod:migrate",
    "db:full-migrate": "pnpm db:generate && pnpm db:sync-migrations",
    "verify:secrets": "node -r dotenv/config scripts/verify-secrets.js"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@paralleldrive/cuid2": "^2.2.2",
    "@playwright/test": "1.40.0",
    "@testing-library/jest-dom": "6.1.4",
    "@testing-library/react": "14.1.2",
    "@types/node": "20.10.0",
    "@types/react": "18.2.39",
    "@types/react-dom": "18.2.17",
    "@typescript-eslint/eslint-plugin": "8.31.0",
    "@typescript-eslint/parser": "8.31.0",
    "@vitejs/plugin-react": "4.2.0",
    "@vitest/coverage-v8": "0.34.6",
    "@vitest/ui": "^3.1.1",
    "dotenv": "16.5.0",
    "eslint": "8.57.1",
    "eslint-config-next": "14.0.3",
    "eslint-config-prettier": "9.0.0",
    "eslint-plugin-prettier": "^5.2.6",
    "husky": "^9.1.7",
    "jsdom": "22.1.0",
    "lint-staged": "^15.5.1",
    "msw": "^2.7.4",
    "prettier": "3.1.0",
    "typescript": "5.3.2",
    "vitest": "0.34.6"
  },
  "dependencies": {
    "@cloudflare/d1": "1.4.1",
    "@cloudflare/workers-types": "4.20250418.0",
    "@hookform/resolvers": "3.3.2",
    "@octokit/rest": "^21.1.1",
    "@rollup/rollup-darwin-arm64": "^4.40.0",
    "@rollup/rollup-darwin-x64": "^4.40.0",
    "@tanstack/react-query": "5.8.4",
    "@types/uuid": "9.0.7",
    "adm-zip": "^0.5.16",
    "autoprefixer": "10.4.16",
    "class-variance-authority": "0.7.0",
    "clsx": "2.0.0",
    "date-fns": "2.30.0",
    "drizzle-kit": "0.31.0",
    "drizzle-orm": "0.42.0",
    "hono": "4.7.7",
    "iconv-lite": "^0.6.3",
    "lucide-react": "0.292.0",
    "next": "14.0.3",
    "node-fetch": "^3.3.2",
    "octokit": "^4.1.3",
    "postcss": "8.4.31",
    "react": "18.2.0",
    "react-dom": "18.2.0",
    "react-hook-form": "7.48.2",
    "tailwind-merge": "1.14.0",
    "tailwindcss": "3.3.5",
    "tailwindcss-animate": "1.0.7",
    "tsx": "^4.7.0",
    "uuid": "9.0.1",
    "wrangler": "^4.13.2",
    "zod": "3.22.4",
    "zustand": "4.4.6"
  },
  "pnpm": {
    "onlyBuiltDependencies": [
      "esbuild",
      "msw",
      "workerd",
      "@rollup/rollup-darwin-arm64"
    ],
    "overrides": {
      "@cloudflare/workerd-darwin-x64": "npm:@cloudflare/workerd-darwin-arm64"
    }
  }
}
